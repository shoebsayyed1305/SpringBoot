1. Add following dependency in POM.xml

<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-rest -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-rest</artifactId>
		    <version>3.0.10</version>
		</dependency>




2. Create class AppConfig with following content
      
      package com.example.demo;      
      import org.springframework.context.annotation.Bean;
      import org.springframework.context.annotation.Configuration;
      import org.springframework.web.client.RestTemplate;
      
      @Configuration	
      public class AppConfig {
      	@Bean
      	public RestTemplate restTemplate() {
      		return new RestTemplate();
      	}
      }




3. Create an API like following in Controller class

@Autowired
	private RestTemplate restTemplate;
	
	private final String apiUrl = " ";                 <-------------- Enter third party API's url here
	
	TrustManager[] trustAllCertificates = new TrustManager[]{
		    new X509TrustManager() {
		        public X509Certificate[] getAcceptedIssuers() {
		            return null;
		        }
		        public void checkClientTrusted(X509Certificate[] certs, String authType) {
		        }
		        public void checkServerTrusted(X509Certificate[] certs, String authType) {
		        }
		    }
		};
	
	@GetMapping("/getData")
	public ResponseEntity<String> getData() {	
		try {
		    SSLContext sslContext = SSLContext.getInstance("TLS");
		    sslContext.init(null, trustAllCertificates, new java.security.SecureRandom());
		    HttpsURLConnection.setDefaultSSLSocketFactory(sslContext.getSocketFactory());
		} catch (Exception e) {
		    e.printStackTrace();
		}
		String response = restTemplate.getForObject(apiUrl, String.class);
		return ResponseEntity.ok(response);
	}
